{
"json_spec_overview_example_one":
"{\n  \"combine\": {\"type\": \"combine\", \"refs\": [\"ONE\", \"TWO\"]},\n  \"refs\": {\n    \"ONE\": [\"A\", \"B\", \"C\"],\n    \"TWO\": [1, 2, 3]\n  }\n}",
"json_spec_overview_example_two":
"{\n  \"combine\": {\"type\": \"combine\", \"refs\": [\"ONE\", \"TWO\"]},\n  \"refs\": {\n    \"ONE\": [\"A\", \"B\", \"C\"],\n    \"TWO\": [1, 2, 3, 4]\n  }\n}",
"json_spec_overview_example_three":
"{\n  \"combine\": {\"type\": \"combine\", \"refs\": [\"ONE\", \"TWO\"]},\n  \"refs\": {\n    \"ONE?sample=true\": [\"A\", \"B\", \"C\"],\n    \"TWO?sample=true\": [1, 2, 3, 4]\n  }\n}",
"json_spec_values_shorthand_one":
"{\n  \"field1\": {\"type\": \"vaules\", \"data\": [1, 2, 3, 4, 5]},\n  \"field2\": {\"type\": \"values\", \"data\": {\"A\": 0.5, \"B\": 0.3, \"C\": 0.2}},\n  \"field3\": {\"type\": \"values\", \"data\": \"CONSTANT\"}\n}",
"json_spec_values_shorthand_two":
"{\n  \"field1\": [1, 2, 3, 4, 5],\n  \"field2\": {\"A\": 0.5, \"B\": 0.3, \"C\": 0.2},\n  \"field3\": \"CONSTANT\"\n}",
"json_spec_inline_key_example":
"{\n  \"network:ipv4?cidr=192.168.0.0/16\": {}\n}",
"json_spec_config_example_one":
"{\n  \"ONE\": {\n    \"type\": \"values\",\n    \"data\": [1, 2, 3],\n    \"config\": {\"prefix\": \"TEST\", \"suffix\": \"@DEMO\"}\n  },\n  \"TWO?prefix=TEST&suffix=@DEMO\": [1, 2, 3]\n}",
"json_spec_common_config_example_one":
"{\n  \"type\": \"values\",\n  \"config\": {\n    \"prefix\": \"Hello \"\n  },\n  \"data\": [\"world\", \"beautiful\", \"destiny\"]\n}",
"json_spec_constants_example_one":
"{\n  \"constant1\": {\"type\": \"values\", \"data\": 42},\n  \"shorthand_constant\": \"This is simulated data and should not be used for nefarious purposes\"\n}",
"json_spec_list_values_example_one":
"{\n  \"list1\": {\"type\": \"values\", \"data\": [\"200\", \"202\", \"303\", \"400\", \"404\", \"500\"]},\n  \"shorthand_list\": [\"200\", \"202\", \"303\", \"400\", \"404\", \"500\"],\n  \"random_pet?sample=true\": [\"dog\", \"cat\", \"bunny\", \"pig\", \"rhino\", \"hedgehog\"]\n}",
"json_spec_weighted_values_example_one":
"{\n  \"weighted1\": {\n    \"type\": \"values\",\n    \"data\": {\n      \"200\": 0.4, \"202\": 0.3, \"303\": 0.1,\n      \"400\": 0.05, \"403\": 0.05, \"404\": 0.05, \"500\": 0.05\n    }\n  },\n  \"shorthand_weighted\": {\n    \"200\": 0.4, \"202\": 0.3, \"303\": 0.1,\n    \"400\": 0.05, \"403\": 0.05, \"404\": 0.05, \"500\": 0.05\n  }\n}",
"json_spec_sample_mode_example_one":
"{\n  \"combine\": {\"type\": \"combine\", \"refs\": [\"ONE\", \"TWO\"]},\n  \"refs\": {\n    \"ONE?sample=true\": [\"A\", \"B\", \"C\"],\n    \"TWO?sample=true\": [1, 2, 3]\n  }\n}",
"json_spec_combine_spec_example_one":
"{\n  \"full name\": {\n    \"type\": \"combine\",\n    \"refs\": [\"first\", \"last\"],\n    \"config\": {\"join_with\": \" \"}\n  },\n  \"refs\": {\n    \"first\": {\n      \"type\": \"values\",\n      \"data\": [\"zebra\", \"hedgehog\", \"llama\", \"flamingo\"]\n    },\n    \"last\": {\n      \"type\": \"values\",\n      \"data\": [\"jones\", \"smith\", \"williams\"]\n    }\n  }\n}",
"json_spec_combine_list_spec_example_one":
"{\n  \"full name\": {\n    \"type\": \"combine-list\",\n    \"refs\": [\n      [\"first\", \"last\"],\n      [\"first\", \"middle\", \"last\"],\n      [\"first\", \"middle_initial\", \"last\"]\n    ],\n    \"config\": {\"join_with\": \" \"}\n  },\n  \"refs\": {\n    \"first\": [\"zebra\", \"hedgehog\", \"llama\", \"flamingo\"],\n    \"last\": [\"jones\", \"smith\", \"williams\"],\n    \"middle\": [\"cloud\", \"sage\", \"river\"],\n    \"middle_initial\": {\"a\": 0.3, \"m\": 0.3, \"j\": 0.1, \"l\": 0.1, \"e\": 0.1, \"w\": 0.1}\n  }\n}",
"json_spec_range_spec_example_one":
"{\n  \"zero_to_ten\": {\n    \"type\": \"range\",\n    \"data\": [0, 10, 0.5]\n  },\n  \"range_shorthand1:range\": {\"data\": [0, 10, 0.5]},\n  \"range_shorthand2:range\": [0, 10, 0.5]\n}",
"json_spec_range_spec_example_two":
"{\n  \"salaries\": {\n    \"type\": \"range\",\n    \"data\": [\n      [1000, 10000, 1000],\n      [10000, 55000, 5000],\n      [55000, 155000, 10000]\n    ]\n  }\n}",
"json_spec_rand_range_spec_example_one":
"{\n  \"population\": {\n    \"type\": \"rand_range\",\n    \"data\": [100, 1000],\n    \"config\": {\"cast_to\": \"int\"}\n  },\n  \"pop:rand_range?cast=f\": [200.2, 1222.7, 2]\n}",
"json_spec_uuid_spec_example_one":
"{\n  \"id\": {\n    \"type\": \"uuid\"\n  },\n  \"id_shorthand:uuid\": {}\n}",
"json_spec_geo_point_spec_example_one":
"{\n  \"egypt\": {\n    \"type\": \"geo.point\",\n    \"config\": {\n      \"bbox\": [31.33134, 22.03795, 34.19295, 25.00562],\n      \"precision\": 3\n    }\n  }\n}",
"json_spec_ip_spec_example_one":
"{\n  \"network\": {\n    \"type\": \"ipv4\",\n    \"config\": {\n      \"cidr\": \"2.22.222.0/16\"\n    }\n  },\n  \"network_shorthand:ip?cidr=2.22.222.0/16\": {},\n  \"network_with_base:ip?base=192.168.0\": {}\n}",
"json_spec_ip_precise_example_one":
"{\"network:ip.precise?cidr=10.0.0.0/8\":{}}",
"json_spec_ip_precise_example_two":
"{\"network:ip.precise?cidr=192.168.0.0/14&sample=true\": {}}",
"json_spec_ip_precise_example_three":
"{\"network:ip.precise?cidr=2.22.222.0/22\": {}}",
"json_spec_weighted_ref_example_one":
"{\n  \"http_code\": {\n    \"type\": \"weightedref\",\n    \"data\": {\n      \"GOOD_CODES\": 0.7,\n      \"BAD_CODES\": 0.3\n    }\n  },\n  \"refs\": {\n    \"GOOD_CODES\": {\"200\": 0.5, \"202\": 0.3, \"203\": 0.1, \"300\": 0.1},\n    \"BAD_CODES\": {\"400\": 0.5, \"403\": 0.3, \"404\": 0.1, \"500\": 0.1}\n  }\n}",
"json_spec_select_list_example_one":
"{\n  \"ingredients\": {\n    \"type\": \"select_list_subset\",\n    \"config\": {\n      \"mean\": 3,\n      \"stddev\": 1,\n      \"min\": 2,\n      \"max\": 4,\n      \"join_with\": \", \"\n    },\n    \"data\": [\"onions\", \"mushrooms\", \"garlic\", \"bell peppers\", \"spinach\", \"potatoes\", \"carrots\"]\n  }\n}",
"json_spec_select_list_example_two":
"{\n  \"ingredients\": {\n    \"type\": \"select_list_subset\",\n    \"config\": {\n      \"mean\": 3, \"stddev\": 1, \"min\": 2, \"max\": 4,\n      \"join_with\": \"\\\", \\\"\",\n      \"quote\": \"\\\"\"\n    },\n    \"data\": [\"onions\", \"mushrooms\", \"garlic\", \"bell peppers\", \"spinach\", \"potatoes\", \"carrots\"]\n  }\n} ",
"json_spec_csv_spec_example_one":
"{\n  \"cities\": {\n    \"type\": \"csv\",\n    \"config\": {\n      \"datafile\": \"cities.csv\",\n      \"delimiter\": \"~\",\n      \"sample\": \"true\"\n    }\n  }\n}",
"yaml_spec_csv_spec_example_two":
"---\nstatus:\n  type: csv\n  config:\n    configref: tabs_config\n    column: 1\ndescription:\n  type: csv\n  config:\n    configref: tabs_config\n    column: 2\n# shorthand notation\nstatus_type:csv?configref=tabs_config&column=3: { }\nrefs:\n  tabs_config:\n    type: configref\n    config:\n      datafile: tabs.csv\n      delimiter: '\\t'\n      headers: true",
"yaml_spec_csv_select_example_one":
"---\nplaceholder:\n  type: csv_select\n  data:\n    geonameid: 1\n    name: 2\n    latitude: 5\n    longitude: 6\n    country_code: 9\n    population: 15\n  config:\n    datafile: allCountries.txt\n    headers: no\n    delimiter: \"\\t\""
}
