{
  "EXAMPLE.schema.json": {
    "valid": [
      {"instance": {"type": "FILLMEIN", "data": "DO I HAVE A DATA ELEMENT?"}, "note": "explanatory..."}
    ],
    "invalid": [
      {"instance": {}, "note": "empty"},
      {"instance": {"type": "NaughtWrite"}, "note": "misspelled"},
      {"instance": {"type": "MightWorkForSome"}, "note": "no fields or refs or data or stuff?"}
    ]
  },
  "combine.schema.json": {
    "valid": [
      {"instance": {"type": "combine", "refs": ["one", "two"]}},
      {"instance": {"type": "combine", "fields": ["one", "two"]}},
      {"instance": {"type": "combine", "refs": ["one", "two"], "config": {"join_with": " "}}},
      {"instance": {"type": "combine", "refs": ["one", "two"], "config": {"as_list": true}}},
      {"instance": {"type": "combine", "refs": ["one", "two"], "config": {"as_list": "true"}}},
      {"instance": {"type": "combine", "refs": ["one", "two"], "config": {"as_list": "yes"}}},
      {"instance": {"type": "combine", "refs": ["one", "two"], "config": {"as_list": "on"}}}
    ],
    "invalid": [
      {"instance": {}, "note": "empty"},
      {"instance": {"type": "cobine"}, "note": "misspelled"},
      {"instance": {"type": "combine"}, "note": "no fields or refs"},
      {"instance": {"type": "combine", "refs": ["one"]}, "note": "only one ref"},
      {"instance": {"type": "combine", "fields": ["one"]}, "note": "only one field"},
      {
        "note": "invalid join_with param",
        "instance": {"type": "combine", "refs": ["one", "two"], "config": {"join_with": true}}
      },
      {
        "note": "invalid as_list param",
        "instance": {"type": "combine", "refs": ["one", "two"], "config": {"as_list": "tru"}}
      }
    ]
  },
  "values.schema.json": {
    "valid": [
      {"instance": {"type": "values", "data": "constant"}},
      {
        "note": "blank string still a constant",
        "instance": {"type": "values", "data": ""}
      },
      {"instance": {"type": "values", "data": 1}},
      {"instance": {"type": "values", "data": 1.5}},
      {"instance": {"type": "values", "data": true}},
      {"instance": {"type": "values", "data": ["one", "two"]}},
      {"instance": {"type": "values", "data": {"one": 0.4, "two": 0.5}}},
      {"instance": {"type": "values", "data": ["one", "two"], "config": {"count": 2}}},
      {"instance": {"type": "values", "data": ["one", "two"], "config": {"count": [1, 2]}}},
      {"instance": {"type": "values", "data": ["one", "two"], "config": {"count": {"1": 0.7, "2": 0.3}}}}
    ],
    "invalid": [
      {"instance": {}, "note": "empty"},
      {"instance": {"type": "value"}, "note": "misspelled"},
      {"instance": {"type": "values"}, "note": "no fields or refs"},
      {"instance": {"type": "values", "data": []}, "note": "empty data"},
      {"instance": {"type": "values", "data": {}}, "note": "empty data,"},
      {
        "note": "invalid count type,",
        "instance": {"type": "values", "data": ["one", "two"], "config": {"count": true}}
      },
      {
        "note": "empty count type,",
        "instance": {"type": "values", "data": ["one", "two"], "config": {"count": []}}
      },
      {
        "note": "counts not integers",
        "instance": {"type": "values", "data": ["one", "two"], "config": {"count": [1.1, 1.7]}}
      },
      {
        "note": "empty count type",
        "instance": {"type": "values", "data": ["one", "two"], "config": {"count": {}}}
      },
      {
        "note": "bad count keys",
        "instance": {"type": "values", "data": ["one", "two"], "config": {"count": {"one": 0.7, "two": 0.3}}}
      }
    ]
  },
  "range.schema.json": {
    "valid": [
      {"instance": {"type": "range", "data": [10]}, "note": "upper bound only"},
      {"instance": {"type": "range", "data": [0, 10]}},
      {"instance": {"type": "range", "data": [0, 10, 2]}, "note": "start stop step"},
      {"instance": {"type": "range", "data": [[0, 10]]}, "note": "single nested"},
      {"instance": {"type": "range", "data": [[0, 10, 2]]}, "note":  "single nested start stop step"},
      {
        "note": "multi sized nested",
        "instance": {"type": "range", "data": [[10], [10, 100, 2], [100, 1000, 100]]}
      },
      {"instance": {"type": "rand_range", "data": [10]}, "note": "upper bound only"},
      {"instance": {"type": "rand_range", "data": [0, 10]}},
      {"instance": {"type": "rand_range", "data": [0, 10, 2]}, "note": "start stop step"},
      {"instance": {"type": "rand_range", "data": [[0, 10]]}, "note": "single nested"},
      {"instance": {"type": "rand_range", "data": [[0, 10, 2]]}, "note":  "single nested start stop step"},
      {
        "note": "multi sized nested",
        "instance": {"type": "rand_range", "data": [[10], [10, 100, 2], [100, 1000, 100]]}
      }
    ],
    "invalid": [
      {"instance": {}, "note": "empty"},
      {"instance": {"type": "ranges"}, "note": "misspelled"},
      {"instance": {"type": "range"}, "note": "no data"},
      {"instance": {"type": "range", "data": []}, "note": "empty data"},
      {"instance": {"type": "range", "data": [1, 10, 2, 4]}, "note": "too many entries"},
      {"instance": {"type": "range", "data": {}}, "note": "wrong data type"},
      {
        "note": "invalid count type,",
        "instance": {"type": "range", "data": [0, 10], "config": {"count": true}}
      },
      {"instance": {"type": "rand_range"}, "note": "no data"},
      {"instance": {"type": "rand_range", "data": []}, "note": "empty data"},
      {"instance": {"type": "rand_range", "data": [1, 10, 2, 4]}, "note": "too many entries"},
      {"instance": {"type": "rand_range", "data": {}}, "note": "wrong data type"},
      {
        "note": "invalid count type,",
        "instance": {"type": "rand_range", "data": [0, 10], "config": {"count": "blue"}}
      }
    ]
  },
  "uuid.schema.json": {
    "valid": [
      {"instance": {"type": "uuid"}, "note": "thats it"}
    ],
    "invalid": [
      {"instance": {}, "note": "empty"},
      {"instance": {"type": "uuids"}, "note": "misspelled"}
    ]
  }
}